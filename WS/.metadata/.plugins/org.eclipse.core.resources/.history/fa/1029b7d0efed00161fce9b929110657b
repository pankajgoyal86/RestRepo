/**
 * 
 */
package com.booking.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.util.UriComponentsBuilder;

import com.booking.entity.Booking;
import com.booking.services.BookingService;

import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

/**
 * @author pgoya6
 *
 */
@RestController
public class MainController {
	
	@Autowired
	BookingService bookingService;
	
	/*@ApiOperation(value = "getBookings", nickname = "getBookings")
	@RequestMapping(method=RequestMethod.GET)
	public String bookingOverview(){
		return "bookingOverview";
	}*/
	
	@ApiOperation(value = "getBookings", nickname = "getBookings")
	@RequestMapping(value="/",method=RequestMethod.GET)
	@ApiResponses(value = { 
            @ApiResponse(code = 200, message = "Success", response = Booking.class),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found"),
            @ApiResponse(code = 500, message = "Internal server error")}) 
	public Booking getbookingOverview(){
		return new Booking();
	}
	@ApiOperation(value = "postBookings", nickname = "postBookings")
	@RequestMapping(value="/",method=RequestMethod.POST)
	@ApiResponses(value = { 
            @ApiResponse(code = 200, message = "Success", response = Booking.class),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found"),
            @ApiResponse(code = 500, message = "Internal server error")}) 
	public Booking addBookingOverview(@RequestBody Booking booking, UriComponentsBuilder uri){
		return bookingService.postBooking(booking);
		
	}
	
	/*
	@RequestMapping(value="/test",method=RequestMethod.GET)
	public String test()
	{
		return "test";
	}
	@RequestMapping(value="/test1",method=RequestMethod.GET)
	public String test1()
	{
		return "test1";
	}*/

}
